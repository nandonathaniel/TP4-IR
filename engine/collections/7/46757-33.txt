Despite their numbers , networking protocols show little variety , because all networking protocols use the same underlying principles and concepts , in the same way . So , the use of a general purpose programming language would yield a large number of applications only differing in the details . A suitably defined ( dedicated ) protocolling language would therefore have little syntax , perhaps just enough to specify some parameters or optional modes of operation , because its virtual machine would have incorporated all possible principles and concepts making the virtual machine itself a universal protocol . The protocolling language would have some syntax and a lot of semantics describing this universal protocol and would therefore in effect be a protocol , hardly differing from this universal networking protocol . In this ( networking ) context a protocol is a language .