Code Description Milling ( M ) Turning ( T ) Corollary info M00 Compulsory stop Non-optional -- machine always stops on reaching M00 in the program execution . M01 Optional stop Machine only stops at M01 if operator pushes the optional stop button . M02 End of program Program ends ; execution may or may not return to program top ( depending on the control ) ; may or may not reset register values . M02 was the original program - end code , now considered obsolete , but still supported for backward compatibility . Many modern controls treat M02 as equivalent to M30 . See M30 for additional discussion of control status upon executing M02 or M30 . M03 Spindle on ( clockwise rotation ) The speed of the spindle is determined by the address S , in either revolutions per minute ( G97 mode ; default ) or surface feet per minute or ( surface ) meters per minute ( G96 mode ( CSS ) under either G20 or G21 ) . The right - hand rule can be used to determine which direction is clockwise and which direction is counter-clockwise . Right - hand - helix screws moving in the tightening direction ( and right - hand - helix flutes spinning in the cutting direction ) are defined as moving in the M03 direction , and are labeled `` clockwise '' by convention . The M03 direction is always M03 regardless of local vantage point and local CW / CCW distinction . M04 Spindle on ( counterclockwise rotation ) See comment above at M03 . M05 Spindle stop M06 Automatic tool change ( ATC ) T ( some - times ) Many lathes do not use M06 because the T address itself indexes the turret . Programming on any particular machine tool requires knowing which method that machine uses . To understand how the T address works and how it interacts ( or not ) with M06 , one must study the various methods , such as lathe turret programming , ATC fixed tool selection , ATC random memory tool selection , the concept of `` next tool waiting '' , and empty tools . M07 Coolant on ( mist ) M08 Coolant on ( flood ) M09 Coolant off M10 Pallet clamp on For machining centers with pallet changers M11 Pallet clamp off For machining centers with pallet changers M13 Spindle on ( clockwise rotation ) and coolant on ( flood ) This one M - code does the work of both M03 and M08 . It is not unusual for specific machine models to have such combined commands , which make for shorter , more quickly written programs . M19 Spindle orientation Spindle orientation is more often called within cycles ( automatically ) or during setup ( manually ) , but it is also available under program control via M19 . The abbreviation OSS ( oriented spindle stop ) may be seen in reference to an oriented stop within cycles . The relevance of spindle orientation has increased as technology has advanced . Although 4 - and 5 - axis contour milling and CNC single - pointing have depended on spindle position encoders for decades , before the advent of widespread live tooling and mill - turn / turn - mill systems , it was not as often relevant in `` regular '' ( non - `` special '' ) machining for the operator ( as opposed to the machine ) to know the angular orientation of a spindle as it is today , except in certain contexts ( such as tool change , or G76 fine boring cycles with choreographed tool retraction ) . Most milling of features indexed around a turned workpiece was accomplished with separate operations on indexing head setups ; in a sense , indexing heads were originally invented as separate pieces of equipment , to be used in separate operations , which could provide precise spindle orientation in a world where it otherwise mostly did n't exist ( and did n't need to ) . But as CAD / CAM and multiaxis CNC machining with multiple rotary - cutter axes becomes the norm , even for `` regular '' ( non - `` special '' ) applications , machinists now frequently care about stepping just about any spindle through its 360 Â° with precision . M21 Mirror , X-axis M21 Tailstock forward M22 Mirror , Y - axis M22 Tailstock backward M23 Mirror OFF M23 Thread gradual pullout ON M24 Thread gradual pullout OFF M30 End of program , with return to program top Today , M30 is considered the standard program - end code , and returns execution to the top of the program . Most controls also still support the original program - end code , M02 , usually by treating it as equivalent to M30 . Additional info : Compare M02 with M30 . First , M02 was created , in the days when the punched tape was expected to be short enough to splice into a continuous loop ( which is why on old controls , M02 triggered no tape rewinding ) . The other program - end code , M30 , was added later to accommodate longer punched tapes , which were wound on a reel and thus needed rewinding before another cycle could start . On many newer controls , there is no longer a difference in how the codes are executed -- both act like M30 . M41 Gear select -- gear 1 M42 Gear select -- gear 2 M43 Gear select -- gear 3 M44 Gear select -- gear 4 M48 Feedrate override allowed M49 Feedrate override NOT allowed Prevent MFO . This rule is also usually called ( automatically ) within tapping cycles or single - point threading cycles , where feed is precisely correlated to speed . Same with spindle speed override ( SSO ) and feed hold button . Some controls are capable of providing SSO and MFO during threading . M52 Unload Last tool from spindle Also empty spindle . M60 Automatic pallet change ( APC ) For machining centers with pallet changers M98 Subprogram call Takes an address P to specify which subprogram to call , for example , `` M98 P8979 '' calls subprogram O8979 . M99 Subprogram end Usually placed at end of subprogram , where it returns execution control to the main program . The default is that control returns to the block following the M98 call in the main program . Return to a different block number can be specified by a P address . M99 can also be used in main program with block skip for endless loop of main program on bar work on lathes ( until operator toggles block skip ) .