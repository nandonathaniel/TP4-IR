It increases complexity of the implementation . Growing a large array when it is full may be difficult or impossible , whereas finding space for a new linked list node in a large , general memory pool may be easier . Adding elements to a dynamic array will occasionally ( when it is full ) unexpectedly take linear ( O ( n ) ) instead of constant time ( although it 's still an amortized constant ) . Using a general memory pool leaves more memory for other data if the list is smaller than expected or if many nodes are freed .